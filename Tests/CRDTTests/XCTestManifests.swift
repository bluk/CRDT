#if !canImport(ObjectiveC)
import XCTest

extension PartialOrderableTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PartialOrderableTests = [
        ("testPartialOrderableAndComparableLessThan", testPartialOrderableAndComparableLessThan),
        ("testPartialOrderableEqual", testPartialOrderableEqual),
        ("testPartialOrderableLessThan", testPartialOrderableLessThan),
        ("testPartialOrderableNotEqual", testPartialOrderableNotEqual),
        ("testPartialOrderableNotLessThan", testPartialOrderableNotLessThan),
    ]
}

extension VClockTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__VClockTests = [
        ("testCodable", testCodable),
        ("testConcurrent", testConcurrent),
        ("testForget", testForget),
        ("testFormGreatestLowerBound", testFormGreatestLowerBound),
        ("testFormGreatestLowerBoundWithOtherLessThanSelfZeroValue", testFormGreatestLowerBoundWithOtherLessThanSelfZeroValue),
        ("testFormGreatestLowerBoundWithSelfLessThanOtherZeroValue", testFormGreatestLowerBoundWithSelfLessThanOtherZeroValue),
        ("testFormIntersection", testFormIntersection),
        ("testFormIntersectionThrowsIfClockZeroValueNotEqual", testFormIntersectionThrowsIfClockZeroValueNotEqual),
        ("testGreatestLowerBound", testGreatestLowerBound),
        ("testIncrementClock", testIncrementClock),
        ("testIntersection", testIntersection),
        ("testIntersectionThrowsIfClockZeroValueNotEqual", testIntersectionThrowsIfClockZeroValueNotEqual),
        ("testLessThan", testLessThan),
        ("testLessThanEqual", testLessThanEqual),
        ("testMakeIncrementClockOperationAndApply", testMakeIncrementClockOperationAndApply),
        ("testMerge", testMerge),
        ("testMerged", testMerged),
        ("testMergedThrowsIfClockZeroValueNotEqual", testMergedThrowsIfClockZeroValueNotEqual),
        ("testMergeThrowsIfClockZeroValueNotEqual", testMergeThrowsIfClockZeroValueNotEqual),
        ("testZeroValuesNotStored", testZeroValuesNotStored),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(PartialOrderableTests.__allTests__PartialOrderableTests),
        testCase(VClockTests.__allTests__VClockTests),
    ]
}
#endif
